{"version":3,"sources":["overwebs-button.js"],"names":["GluonElement","html","OverwebsButton","template","observedAttributes","constructor","_links","_buttons","connectedCallback","$","slot","assignedNodes","forEach","HTMLAnchorElement","push","HTMLButtonElement","getAttribute","_propagateDisabled","attributeChangedCallback","tabIndex","style","pointerEvents","setAttribute","removeAttribute","customElements","define","is"],"mappings":"AAAA,OAASA,YAAT,CAAuBC,IAAvB,KAAmC,qBAAnC,CACA,MAAO,qCAAP,CAEA,KAAMC,eAAN,QAA6BF,aAAa,CACxC,GAAIG,SAAJ,EAAe,CAEb,MAAOF,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6Gb,CAED,UAAWG,mBAAX,EAAgC,CAC9B,kBACD,CAEDC,aAAc,CACZ,OADY,CAEZ,KAAKC,MAAL,GAFY,CAGZ,KAAKC,QAAL,GACD,CAEDC,mBAAoB,CAClB,MAAMA,iBAAN,EADkB,CAElB,KAAKC,CAAL,CAAOC,IAAP,CAAYC,aAAZ,GAA4BC,OAA5B,CAAoC,KAAQ,CACtC,YAAgBC,kBADsB,CAExC,KAAKP,MAAL,CAAYQ,IAAZ,GAFwC,CAG/B,YAAgBC,kBAHe,EAIxC,KAAKR,QAAL,CAAcO,IAAd,GAEH,CAND,CAFkB,CASoB,IAAlC,QAAKE,YAAL,CAAkB,UAAlB,CATc,EAUhB,KAAKC,kBAAL,IAEH,CAEDC,+BAAmD,CACpC,UAAT,IAD6C,EAE/C,KAAKD,kBAAL,CAAqC,IAAb,IAAxB,CAEH,CAEDA,qBAA6B,IAEzB,KAAKX,MAAL,CAAYM,OAAZ,CAAoB,KAAQ,CAC1B,EAAKO,QAAL,CAAgB,CAAC,CADS,CAE1B,EAAKC,KAAL,CAAWC,aAAX,CAA2B,MAC5B,CAHD,CAFyB,CAMzB,KAAKd,QAAL,CAAcK,OAAd,CAAsB,KAAU,CAC9B,EAAOU,YAAP,CAAoB,UAApB,CAAgC,EAAhC,CACD,CAFD,CANyB,GAUzB,KAAKhB,MAAL,CAAYM,OAAZ,CAAoB,KAAQ,CAC1B,EAAKO,QAAL,OAD0B,CAE1B,EAAKC,KAAL,CAAWC,aAAX,CAA2B,EAC5B,CAHD,CAVyB,CAczB,KAAKd,QAAL,CAAcK,OAAd,CAAsB,KAAU,CAC9B,EAAOW,eAAP,CAAuB,UAAvB,CACD,CAFD,CAdyB,CAkB5B,CAlKuC,CAqK1CC,eAAeC,MAAf,CAAsBvB,eAAewB,EAArC,CAAyCxB,cAAzC,C","file":"overwebs-button.js","sourcesContent":["import { GluonElement, html } from '../gluonjs/gluon.js';\nimport '../overwebs-fonts/overwebs-fonts.js';\n\nclass OverwebsButton extends GluonElement {\n  get template() {\n    // TODO: Migrate to --overwebs-window-size\n    return html`\n    <style>\n    :host {\n      display: inline-block;\n      overflow: visible;\n      vertical-align: bottom;\n    }\n\n    ::slotted(button) {\n      border: 0;\n      font: inherit;\n    }\n\n    :host([block]) ::slotted(button) {\n      width: 100%;\n    }\n\n    ::slotted(*) {\n      height: calc(46 / 2560 * var(--overwebs-window-size, 1920px));\n      padding: 0 calc(25 / 2560 * var(--overwebs-window-size, 1920px));\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      color: #ffffff;\n      text-shadow: 0 0 calc(8 / 2560 * var(--overwebs-window-size, 1920px)) rgba(256, 256, 256, 0.4), 0 0 calc(2 / 2560 * var(--overwebs-window-size, 1920px)) rgba(256, 256, 256, 0.8);\n      font-size: calc(26 / 2560 * var(--overwebs-window-size, 1920px));\n      font-family: overwebs-futura;\n      text-transform: uppercase;\n      user-select: none;\n      border-radius: calc(2 / 2560 * var(--overwebs-window-size, 1920px));\n      opacity: 0.95;\n      cursor: pointer;\n      box-sizing: border-box;\n      border: 0;\n    }\n\n    ::slotted(a) {\n      text-decoration: none;\n    }\n    \n    :host([block]) {\n      display: block;\n    }\n\n    :host([block]) ::slotted(*){\n      display: flex;\n    }\n\n    :host([big]) ::slotted(*) {\n      height: calc(74 / 2560 * var(--overwebs-window-size, 1920px));\n      padding: 0 calc(66 / 2560 * var(--overwebs-window-size, 1920px));\n      border-radius: calc(3 / 2560 * var(--overwebs-window-size, 1920px));\n    }\n\n\n    :host([big][bigtext]) ::slotted(*) {\n      font-size: calc(46 / 2560 * var(--overwebs-window-size, 1920px));\n    }\n\n    :host([yellow]) ::slotted(*) {\n      background: rgba(240, 177, 64, 0.9);\n      box-shadow: inset 0 0 calc(3 / 2560 * var(--overwebs-window-size, 1920px)) calc(1 / 2560 * var(--overwebs-window-size, 1920px)) rgba(208, 151, 52, 1), 0 0 0 calc(1 / 2560 * var(--overwebs-window-size, 1920px)) rgba(120, 82, 36, 1),\n        0 0 calc(8 / 2560 * var(--overwebs-window-size, 1920px)) calc(1 / 2560 * var(--overwebs-window-size, 1920px)) rgba(120, 82, 36, 1);\n      text-shadow: 0 0 calc(8 / 2560 * var(--overwebs-window-size, 1920px)) rgba(256, 256, 256, 0.4), 0 0 calc(1 / 2560 * var(--overwebs-window-size, 1920px)) rgba(256, 256, 256, 0.8);\n    }\n\n    :host([yellow]) ::slotted(*:hover), :host([yellow]) ::slotted(*:focus) {\n      background: rgba(264, 194, 70, 0.9);\n      box-shadow: 0 0 0 calc(3 / 2560 * var(--overwebs-window-size, 1920px)) #ffffff;\n    }\n\n    :host([blue]) ::slotted(*) {\n      background: rgba(41, 139, 206, 0.9);\n      box-shadow: 0 0 0 calc(1 / 2560 * var(--overwebs-window-size, 1920px)) rgba(33, 95, 144, 0.4), 0 0 calc(6 / 2560 * var(--overwebs-window-size, 1920px)) calc(1 / 2560 * var(--overwebs-window-size, 1920px)) rgba(33, 95, 144, 0.4);\n      text-shadow: 0 0 calc(5 / 2560 * var(--overwebs-window-size, 1920px)) rgba(256, 256, 256, 0.3);\n    }\n\n    :host([blue]) ::slotted(*:hover), :host([blue]) ::slotted(*:focus) {\n      background: rgba(45, 153, 226, 0.9);\n      box-shadow: 0 0 0 calc(3 / 2560 * var(--overwebs-window-size, 1920px)) #ffffff;\n    }\n\n    :host([purple]) ::slotted(*) {\n      background: rgba(178, 0, 255, 0.9);\n      box-shadow: 0 0 0 calc(1 / 2560 * var(--overwebs-window-size, 1920px)) rgba(33, 95, 144, 0.4), 0 0 calc(6 / 2560 * var(--overwebs-window-size, 1920px)) calc(1 / 2560 * var(--overwebs-window-size, 1920px)) rgba(33, 95, 144, 0.4);\n      text-shadow: 0 0 calc(5 / 2560 * var(--overwebs-window-size, 1920px)) rgba(256, 256, 256, 0.3);\n    }\n\n    :host([purple]) ::slotted(*:hover), :host([purple]) ::slotted(*:focus) {\n      background: rgba(196, 5, 255, 0.9);\n      box-shadow: 0 0 0 calc(3 / 2560 * var(--overwebs-window-size, 1920px)) #ffffff;\n    }\n\n    :host([disabled]) ::slotted(*),\n    :host([disabled]) ::slotted(*:hover) {\n      background: transparent;\n      box-shadow: inset 0 0 calc(8 / 2560 * var(--overwebs-window-size, 1920px)) rgba(151, 172, 181, 0.4), 0 0 calc(8 / 2560 * var(--overwebs-window-size, 1920px)) rgba(151, 172, 181, 0.4),\n        inset 0 0 calc(3 / 2560 * var(--overwebs-window-size, 1920px)) rgba(151, 172, 181, 0.7), 0 0 calc(2 / 2560 * var(--overwebs-window-size, 1920px)) calc(1 / 2560 * var(--overwebs-window-size, 1920px)) rgba(151, 172, 181, 1);\n      color: rgba(141, 166, 181, 0.8);\n      text-shadow: 0 0 calc(8 / 2560 * var(--overwebs-window-size, 1920px)) rgba(141, 166, 181, 0.4), 0 0 calc(2 / 2560 * var(--overwebs-window-size, 1920px)) rgba(141, 166, 181, 0.8);\n      cursor: default;\n    }\n\n    ::slotted(*:focus) {\n      outline:none;\n    }\n    </style>\n    <slot id=\"slot\"></slot>\n    `;\n  }\n\n  static get observedAttributes() {\n    return ['disabled'];\n  }\n\n  constructor() {\n    super();\n    this._links = [];\n    this._buttons = [];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.$.slot.assignedNodes().forEach(node => {\n      if (node instanceof HTMLAnchorElement) {\n        this._links.push(node);\n      } else if (node instanceof HTMLButtonElement) {\n        this._buttons.push(node);\n      }\n    });\n    if (this.getAttribute('disabled') !== null) {\n      this._propagateDisabled(true);\n    }\n  }\n\n  attributeChangedCallback(attr, oldValue, newValue) {\n    if (attr === 'disabled') {\n      this._propagateDisabled(newValue !== null);\n    }\n  }\n\n  _propagateDisabled(disabled) {\n    if (disabled) {\n      this._links.forEach(link => {\n        link.tabIndex = -1;\n        link.style.pointerEvents = 'none';\n      });\n      this._buttons.forEach(button => {\n        button.setAttribute('disabled', '');\n      });\n    } else {\n      this._links.forEach(link => {\n        link.tabIndex = undefined;\n        link.style.pointerEvents = '';\n      });\n      this._buttons.forEach(button => {\n        button.removeAttribute('disabled');\n      });\n    }\n  }\n}\n\ncustomElements.define(OverwebsButton.is, OverwebsButton);\n"]}